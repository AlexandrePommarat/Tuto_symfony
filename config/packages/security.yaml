security:
    encoders:
       Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
       ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]

       ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]



    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
                memory:
                    users:
                        user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                        admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
          #memory:
          #  users:
          #    user:   { password: userpass, roles: ['ROLE_USER'] }
          #    admin:  { password: adminpass, roles: ['ROLE_ADMIN'] }
    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main_login:
            pattern:   ^/login$
            anonymous: true

        main:  # C'est le nom du pare feu on peut mettre ce qu'on veux
            pattern:   ^/  # masque d'url
            anonymous:  false  # accepte les utilisateurs anonyme
            form_login:
              login_path: login         #route du formulaire
              check_path: login_check   #route de verification
            logout:
              path:       logout        #route pour se d√©co
              target:     login         #route de redirection
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
